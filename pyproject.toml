[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "xrcs"
dynamic = ["version"]
description = "An ok training app."
authors = [
    {name="Name", email="example@email.com"}
]
readme = "README.md"
classifiers = [
    "Topic :: Software Development :: Machine Learning Tools",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11"

dependencies = [
    "pydantic~=2.0",
    "kivy~=2.0",
    "kivymd>=1.0",
]

[project.optional-dependencies]
dev = [
    "ruff==0.9.4",
    "mypy==1.14.1",
    "pre-commit==4.1.0",
    "pytest~=7.0",
    "pytest-xdist~=3.0",
    "pytest-cov~=4.0",
    "pytest-mock~=3.0",
    "pylint~=3.0",
    "pylint-pydantic",
    "mkdocs~=1.0",
    "mkdocstrings[python]>=0.20.0",
    "mkdocs-material~=9.0",
    "mkdocs-include-markdown-plugin~=6.0",
]
packaging = [
    "buildozer",
]
all = [
    "xrcs[dev]",
]

[tool.setuptools_scm]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "D",    # pydocstyle
]
ignore = ["D100", "D104"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
show_missing = true
